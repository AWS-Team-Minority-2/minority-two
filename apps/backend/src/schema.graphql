type Query {
  getMinorityBusiness(zip_code: String!): [BusinessOutput]
}

type BusinessOutput {
  name: String!
  cover_image: String!
  address: String
  city: String
  state: String
  zip_code: Int
  long: String
  lat: String
  is_online: Boolean!
  type: String!
  is_featured: Boolean!
  is_pending: Boolean!
  sid: String!
  profile_image: String
  rating_count: Int!
  rating: String!
  distance: String
  section: Section
}

type Section {
  type: String!
  sections: [MenuSection]
}

type Dish {
  id: String!
  name: String!
  description: String!
  price: String!
  image_url: String!
  rating: String!
  out_of_stock: Boolean!
}

type MenuSection {
  name: String!
  dishes: [Dish]
}

type Mutation {
  RegisterUser(user: User): AddedUserResponse
  LoginUser(details: UserDetails): LoginResponse
  LoginAdmin(adminCode: String): AdminLoginResponse
  UploadNotification(details: NotificationUpload): NotificationResponse
}

input NotificationUpload {
  name: String!
  image_url: String!
  type: String!
  user_id: String!
}

input UserDetails {
  email: String!
  password: String!
}

type AdminLoginResponse {
  name: String!
}

type NotificationResponse {
  message: String!
}

type LoginResponse {
  id: String
  userMetadata: UserMetaData
}

type AddedUserResponse {
  message: String
}

type UserOutput {
  id: String
  name: String
}

type Address {
  street: String!
  city: String!
  state: String!
  zipcode: Int!
}

type UserMetaData {
  firstname: String!
  lastname: String!
  phonenumber: String!
  email: String!
  address: Address!
}

type UserResponse {
  id: String!
  firstname: String!
  lastname: String!
  phonenumber: String!
  email: String!
  password: String!
  address: String!
  city: String!
  state: String!
  zipcode: Int!
}

input User {
  firstName: String!
  lastName: String!
  phoneNumber: String!
  email: String!
  password: String!
  address: String!
  city: String!
  state: String!
  zipCode: Int!
}
